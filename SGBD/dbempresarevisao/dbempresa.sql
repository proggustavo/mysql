SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBEMPRESA;

CREATE DATABASE DBEMPRESA;

USE DBEMPRESA;

CREATE TABLE DEPARTAMENTO (
	IDDEPARTAMENTO INT NOT NULL PRIMARY KEY auto_increment,
	NOME VARCHAR(100)
);

INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(1, 'FINANCEIRO');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(2, 'COBRANÇA');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(3, 'CONTABILIDADE');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(4, 'AUDITORIA');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(5, 'LOGISTICA');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(6, 'PRODUÇÃO');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(7, 'OPERAÇÕES');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(8, 'RECURSOS HUMANOS');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(9, 'TI');
INSERT INTO DEPARTAMENTO (IDDEPARTAMENTO, NOME)VALUES(10, 'MARKETING');

CREATE TABLE FUNCAO (
	IDFUNCAO INT NOT NULL PRIMARY KEY auto_increment,
	NOME VARCHAR(100)
);

INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(1, 'ANALISTA ADMINISTRATIVO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(2, 'ANALISTA FINANCEIRO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(3, 'ANALISTA DE SISTEMAS');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(4, 'ANALISTA DE RECURSOS HUMANOS');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(5, 'ASSISTENTE DE MANUTENÇÃO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(6, 'ASSISTENTE ADMINISTRATIVO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(7, 'SECRETÁRIA');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(8, 'AUXILIAR ADMINISTRATIVO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(9, 'AUXILIAR DE PRODUÇÃO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(10, 'OPERADOR');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(11, 'ENCARREGADO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(12, 'PROGRAMADOR');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(13, 'PUBLICITARIO');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(14, 'DIAGRAMADOR');
INSERT INTO FUNCAO (IDFUNCAO, NOME)VALUES(15, 'JORNALISTA');

CREATE TABLE FUNCIONARIO (
	IDFUNCIONARIO INT NOT NULL PRIMARY KEY auto_increment,
	IDDEPARTAMENTO INT,
	IDFUNCAO INT,
	NOME VARCHAR(100),
	SEXO CHAR(1),
	IDADE INT,
	DTADMISSAO DATETIME NOT NULL,
	DTDEMISSAO DATETIME,
	SALARIO NUMERIC(9,2),
	CONSTRAINT FK_FUNCIONARIO_DEPARTAMENTO FOREIGN KEY (IDDEPARTAMENTO) REFERENCES DEPARTAMENTO (IDDEPARTAMENTO),
	CONSTRAINT FK_FUNCIONARIO_FUNCAO FOREIGN KEY (IDFUNCAO) REFERENCES FUNCAO (IDFUNCAO) 
);

INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(1,  2, 'Robert Pers'		, 'M', 19, '2012-01-16 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(1,  8, 'Roberto Garcam'	, 'M', 25, '2011-08-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(1,  8, 'Guilherme Maril'	, 'M', 25, '2012-02-17 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(1,  7, 'Aline Cristina'	, 'F', 19, '2000-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(2,  1, 'Jerônimo DalaSi'	, 'M', 26, '2012-01-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(2,  6, 'Thiago Ciello'		, 'M', 29, '2011-11-17 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(2,  7, 'Aline Batista'		, 'F', 19, '2001-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(3,  NULL, 'Lucas Logrini'		, 'M', 28, '2012-07-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(3,  6, 'Lucas Mellva'		, 'M', 29, '2012-08-18 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(3,  7, 'Beatriz AlVinO'	, 'F', 22, '2004-10-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  1, 'Roberto Adez'		, 'M', 26, '2012-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  6, 'Pedro Siues'		, 'M', 19, '2011-01-28 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  6, 'Nathan Sendil'		, 'M', 25, '2012-10-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  7, 'Gabriela Cristina'	, 'F', 30, '2012-05-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(5,  1, 'Paulo Cerasa'		, 'M', 22, '2002-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(5,  NULL, 'Lucas Olivio'		, 'M', 28, '2012-12-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(5,  6, 'João Viwerz'		, 'M', 19, '2011-08-13 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(3,  7, 'Beatriz AlVinO'	, 'F', 22, '2004-10-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  1, 'Roberto Adez'		, 'M', 26, '2012-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  6, 'Pedro Siues'		, 'M', 19, '2011-01-28 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  6, 'Nathan Sendil'		, 'M', 25, '2012-10-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(4,  7, 'Gabriela Cristina'	, 'F', 30, '2012-05-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL,  1, 'Paulo Cerasa'		, 'M', 22, '2002-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL,  6, 'Lucas Olivio'		, 'M', 28, '2012-12-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL,  6, 'João Viwerz'		, 'M', 19, '2011-08-13 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL,  7, 'Gabrielle Alenade'	, 'F', 25, '2012-11-13 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(6,  5, 'Matheus kamp'		, 'M', 30, '2012-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(6,  9, 'Matheus Lorb'		, 'M', 26, '2001-04-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(6, 10, 'Rhuan Rorti'		, 'M', 28, '2012-02-13 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(6, 10, 'Paulo Heqt'		, 'M', 19, '2002-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(6,  7, 'Victoria Cuehler'	, 'F', 27, '2012-12-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL,  6, 'João Saebr'		, 'M', 30, '2002-08-14 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL, 11, 'Lucas Furil'		, 'M', 22, '2001-03-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL, 10, 'Rhamon Rool'		, 'M', 31, '2012-07-14 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(NULL, 10, 'Matheus Moricensk'	, 'M', 19, '2002-08-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(8,  4, 'Rodrigo Livier'	, 'M', 22, '2012-03-16 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(8,  NULL, 'Guilherme Freder'	, 'M', 26, '2001-09-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(8,  NULL, 'Ricardo Rodess'	, 'M', 19, '2012-08-22 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(9,  3, 'Gabriel Aller'		, 'M', 27, '2010-05-12 14:00:00', 0000.00);
INSERT INTO FUNCIONARIO (IDDEPARTAMENTO, IDFUNCAO, NOME, SEXO, IDADE, DTADMISSAO, SALARIO)VALUES(9, 12, 'Breno BeieRosa'	, 'M', 19, '2012-08-26 14:00:00', 0000.00);

update FUNCIONARIO set SALARIO = RAND() * 1000 * 2;
update FUNCIONARIO set SALARIO =  SALARIO * 20 where SALARIO < 200;
update FUNCIONARIO set SALARIO =  SALARIO * 10 where SALARIO < 100;
update FUNCIONARIO set SALARIO =  SALARIO * 4 where SALARIO < 300;
update FUNCIONARIO set SALARIO =  SALARIO * 2 where SALARIO < 700;
-- CORRIGIR
-- 1 Com base no DER acima qual é a sintaxe do comando SQL para fazer um join entre a tabela DEPARTAMENTO e FUNCIONARIO


SELECT 
	FUNCIONARIO.NOME
	,	DEPARTAMENTO.NOME
FROM 
	FUNCIONARIO
    INNER JOIN DEPARTAMENTO ON 
    FUNCIONARIO.IDDEPARTAMENTO = DEPARTAMENTO.IDDEPARTAMENTO
WHERE 
	DEPARTAMENTO.NOME = 'FINANCEIRO';


-- CORRIGIR
-- 2 Com base no DER acima qual é a sintaxe do comando SQL para fazer um 
-- join entre a tabela FUNÇÃO e FUNCIONARIO

SELECT 
	FUNCIONARIO.NOME 
    , FUNCIONARIO.IDFUNCIONARIO
    , FUNCAO.NOME
FROM FUNCIONARIO
	INNER JOIN FUNCAO ON
		FUNCIONARIO.IDFUNCAO = FUNCAO.IDFUNCAO
WHERE
	FUNCAO.NOME LIKE '%ASSISTENTE%';
    
    
    SELECT	
	FUNCIONARIO.IDFUNCIONARIO
    , FUNCIONARIO.NOME
    , FUNCIONARIO.SALARIO
    , DEPARTAMENTO.NOME
	, FUNCAO.NOME
FROM 
	FUNCIONARIO
    INNER JOIN FUNCAO ON 
    	FUNCIONARIO.IDFUNCAO = FUNCAO.IDFUNCAO
    INNER JOIN DEPARTAMENTO ON
    	FUNCIONARIO.IDDEPARTAMENTO = DEPARTAMENTO.IDDEPARTAMENTO
    ORDER BY FUNCIONARIO.NOME;
    
    
-- CORRIGIR    
-- 3 Com base no DER acima qual é a sintaxe do comando SQL para fazer um 
-- join entre a tabela DEPARTAMENTO, FUNÇÃO e FUNCIONARIO

SELECT 
	FUNCIONARIO.NOME
    , FUNCIONARIO.DTADMISSAO
    , FUNCIONARIO.SALARIO
FROM 
	FUNCIONARIO
WHERE 
	FUNCIONARIO.SALARIO > 1800;
    
-- 4 Crie uma consulta SQL para listar o nome do funcionário, e o nome do -- departamento, de todos os funcionários que trabalham no departamento 
-- "financeiro";

SELECT 
	FUNCIONARIO.NOME
    , FUNCIONARIO.SALARIO
    , DEPARTAMENTO.NOME
FROM 
	FUNCIONARIO
    RIGHT JOIN DEPARTAMENTO ON
    FUNCIONARIO.IDDEPARTAMENTO = DEPARTAMENTO.IDDEPARTAMENTO
WHERE
	DEPARTAMENTO.NOME = 'FINANCEIRO';
    
/* 5 Crie uma consulta SQL para listar o maior salario, o menor salario, agrupado por sexo; */

SELECT 
	Max(SALARIO) AS MAIOR
    , Min(SALARIO) AS MENOR
    , SEXO
FROM 
	FUNCIONARIO 
GROUP BY SEXO;

DESC FUNCIONARIO;
SELECT * FROM FUNCIONARIO;


-- 6 Crie uma consulta SQL para listar a soma de todos os salario e a 
-- média salarial agrupado por departamento, liste também o código e o 
-- nome do departamento;


-- 7 Crie uma consulta SQL para listar a quantidade de funcionário por departamento, o resultado deve ser ordenado pelo nome do departamento;

SELECT 
	SUM(FUNCIONARIO.SALARIO) AS SOMA
    , AVG(FUNCIONARIO.SALARIO) AS MEDIA
    , DEPARTAMENTO.IDDEPARTAMENTO
    , DEPARTAMENTO.NOME
FROM 
	FUNCIONARIO
    INNER JOIN DEPARTAMENTO ON
		FUNCIONARIO.IDDEPARTAMENTO = DEPARTAMENTO.IDDEPARTAMENTO   
    GROUP BY DEPARTAMENTO.NOME;

        
-- 8 Crie uma consulta SQL para listar a soma dos salários dos funcionários por função, listando também o maior e o menor salario;


SELECT 
	FUNCIONARIO.NOME
    , FUNCIONARIO.SALARIO
    , FUNCAO.NOME
    , FUNCIONARIO.DTADMISSAO
    , (NOW() - YEAR(FUNCIONARIO.DTADMISSAO)) AS ANOS
FROM
	FUNCIONARIO
    INNER JOIN FUNCAO ON 
    FUNCAO.IDFUNCAO = FUNCIONARIO.IDFUNCAO
WHERE 
	(NOW() - YEAR(FUNCIONARIO.DTADMISSAO)) > 1 ORDER BY FUNCIONARIO.NOME;


-- 9 Crie uma consulta SQL para listar o código do funcionário, o nome do funcionário, o salario, o nome do departamento, e o nome da função, de todos -- os funcionários;


SELECT 
	DEPARTAMENTO.NOME
	, count(*) 
FROM 
FUNCIONARIO INNER JOIN DEPARTAMENTO ON
FUNCIONARIO.IDDEPARTAMENTO = DEPARTAMENTO.IDDEPARTAMENTO
GROUP BY FUNCIONARIO.IDDEPARTAMENTO;


-- 10

SELECT 
	SUM(FUNCIONARIO.SALARIO) AS SOMA
    , MAX(FUNCIONARIO.SALARIO) AS MAIOR
    , MIN(FUNCIONARIO.SALARIO) AS MENOR
    , FUNCAO.NOME
FROM FUNCIONARIO
	INNER JOIN FUNCAO ON
    FUNCIONARIO.IDFUNCAO = FUNCAO.IDFUNCAO
    GROUP BY FUNCAO.NOME;
    

    
